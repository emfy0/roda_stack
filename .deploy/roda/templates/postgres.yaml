{{- if .Values.postgres.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.appName }}-postgres
  labels:
    app: {{ .Values.appName }}
spec:
  ports:
    - port: 5432
  selector:
    app: {{ .Values.appName }}
    tier: postgres
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: {{ .Values.appName }}-postgres-pv
  labels:
    type: local
spec:
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/tmp/data/{{ .Values.appName }}"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Values.appName }}-postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  {{- if .Values.postgres.storage.size.limited }}
  resources:
    requests:
      storage: {{ .Values.postgres.storage.size.value }}
  {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-postgres
  labels:
    app: {{ .Values.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
      tier: postgres
  template:
    metadata:
      name: {{ .Values.appName }}-postgres
      labels:
        app: {{ .Values.appName }}
        tier: postgres
    spec:
      volumes:
      - name: {{ .Values.appName }}-postgres-pv
        persistentVolumeClaim:
          claimName: {{ .Values.appName }}-postgres-pvc
      containers:
      - name: {{ .Values.appName }}-postgres
        image: {{ .Values.postgres.image }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgres.secrets.user.name }}"
              key: "{{ .Values.postgres.secrets.user.key }}"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.postgres.secrets.password.name }}"
              key: "{{ .Values.postgres.secrets.password.key }}"
        - name: POSTGRES_DB
          value: "{{ .Values.postgres.dbName }}"
        - name: PGDATA
          value: "/var/lib/postgresql/data"
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: "/var/lib/postgresql/data"
          name: {{ .Values.appName }}-postgres-pv
{{- end }}
